name: Generate SLSA Provenance for Backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    permissions:
      id-token: write
      contents: read
      actions: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v2.1.0
    with:
      directory: back-end
      run-scripts: "ci, test, build"

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node registry authentication
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: publish
        id: publish
        uses: slsa-framework/slsa-github-generator/actions/nodejs/publish@v2.1.0
        with:
          access: public
          node-auth-token: ${{ secrets.NPM_TOKEN }}
          package-name: ${{ needs.build.outputs.package-name }}
          package-download-name: ${{ needs.build.outputs.package-download-name }}
          package-download-sha256: ${{ needs.build.outputs.package-download-sha256 }}
          provenance-name: ${{ needs.build.outputs.provenance-name }}
          provenance-download-name: ${{ needs.build.outputs.provenance-download-name }}
          provenance-download-sha256: ${{ needs.build.outputs.provenance-download-sha256 }}
  verify:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - name: Download SLSA verifier
        uses: slsa-framework/slsa-verifier/actions/installer@v2.7.0

      - name: Get package metadata
        run: |
          echo "PACKAGE_NAME=${{ needs.publish.outputs.package-name }}" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$(echo ${{ needs.publish.outputs.package-name }} | cut -d@ -f3)" >> $GITHUB_ENV
          echo "PACKAGE_BASE=$(echo ${{ needs.publish.outputs.package-name }} | cut -d@ -f2)" >> $GITHUB_ENV

      - name: Download package and attestations
        run: |
          curl -Sso attestations.json "$(npm view $PACKAGE_NAME --json | jq -r '.dist.attestations.url')" && \
          curl -Sso package.tgz "$(npm view $PACKAGE_NAME --json | jq -r '.dist.tarball')"

      - name: Verify SLSA provenance
        run: |
          SLSA_VERIFIER_EXPERIMENTAL=1 slsa-verifier verify-npm-package package.tgz \
            --attestations-path attestations.json \
            --builder-id "https://github.com/slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v2.1.0" \
            --package-name "$PACKAGE_NAME" \
            --package-version "$PACKAGE_VERSION" \
            --source-uri "github.com/${{ github.repository }}"

      - name: Print verification result
        if: ${{ success() }}
        run: echo "âœ… SLSA provenance verification passed!"
