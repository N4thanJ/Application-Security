name: Generate SLSA Provenance for Backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    permissions:
      id-token: write
      contents: read
      actions: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v2.1.0
    with:
      directory: back-end
      run-scripts: "ci, test, build"

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Delete old npm packages of backend
        run: |
          curl -L \
            -X DELETE \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/users/N4thanJ/packages/npm/application-security-backend

      - name: Set up Node registry authentication
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://npm.pkg.github.com/"

      - name: Configure npm for GitHub Packages
        run: |
          echo "@N4thanJ:registry=https://npm.pkg.github.com/" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: publish
        id: publish
        uses: slsa-framework/slsa-github-generator/actions/nodejs/publish@v2.1.0
        with:
          access: public
          node-auth-token: ${{ secrets.GITHUB_TOKEN }}
          package-name: ${{ needs.build.outputs.package-name }}
          package-download-name: ${{ needs.build.outputs.package-download-name }}
          package-download-sha256: ${{ needs.build.outputs.package-download-sha256 }}
          provenance-name: ${{ needs.build.outputs.provenance-name }}
          provenance-download-name: ${{ needs.build.outputs.provenance-download-name }}
          provenance-download-sha256: ${{ needs.build.outputs.provenance-download-sha256 }}

  verify:
    needs: [publish]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Debug artifacts
        run: |
          echo "Artifacts directory structure:"
          find artifacts -type f | sort

      - name: Rename and extract package and provenance
        run: |
          # Find the package tarball (non-attestation tgz file)
          PACKAGE_TGZ=$(find artifacts -name "*.tgz" -not -path "*/slsa-attestations/*" | head -1)
          if [ -z "$PACKAGE_TGZ" ]; then
            echo "ERROR: Package tarball not found"
            exit 1
          fi
          echo "Found package file: $PACKAGE_TGZ"
          cp "$PACKAGE_TGZ" package.tgz

          # Find and extract the attestation archive
          ATTESTATION_TGZ=$(find artifacts -name "folder.tgz" | head -1)
          if [ -z "$ATTESTATION_TGZ" ]; then
            echo "ERROR: Attestation archive not found"
            exit 1
          fi
          echo "Found attestation archive: $ATTESTATION_TGZ"

          # Create directory and extract
          mkdir -p slsa-attestation
          tar -xzf "$ATTESTATION_TGZ" -C slsa-attestation

          # Find the JSON attestation file
          ATTESTATION_JSON=$(find slsa-attestation -name "*.json" | head -1)
          if [ -z "$ATTESTATION_JSON" ]; then
            echo "ERROR: JSON attestation file not found"
            ls -la slsa-attestation
            exit 1
          fi
          echo "Found attestation file: $ATTESTATION_JSON"
          cp "$ATTESTATION_JSON" attestation.json

      - name: Verify SLSA Provenance
        run: |
          ls
          PACKAGE_VERSION=$(jq -r '.version' back-end/package.json)
          curl -LO https://github.com/slsa-framework/slsa-verifier/releases/latest/download/slsa-verifier-linux-amd64
          chmod +x slsa-verifier-linux-amd64
          SLSA_VERIFIER_EXPERIMENTAL=1 ./slsa-verifier-linux-amd64 verify-npm-package package.tgz \
            --attestations-path attestations.json \
            --builder-id "https://github.com/slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml" \
            --package-name "@n4thanj/application-security-backend" \
            --package-version $PACKAGE_VERSION \
            --source-uri github.com/N4thanJ/Application-Security
