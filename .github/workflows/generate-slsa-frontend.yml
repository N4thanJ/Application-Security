name: Generate SLSA Provenance for Frontend

on:
  push:
    branches:
      - main
    paths:
      - "front-end/**"
  workflow_dispatch:

jobs:
  build:
    permissions:
      id-token: write
      contents: read
      actions: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v2.1.0
    with:
      directory: front-end
      run-scripts: "ci, build"

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node registry authentication
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: publish
        id: publish
        uses: slsa-framework/slsa-github-generator/actions/nodejs/publish@v2.1.0
        with:
          access: public
          node-auth-token: ${{ secrets.NPM_TOKEN }}
          package-name: ${{ needs.build.outputs.package-name }}
          package-download-name: ${{ needs.build.outputs.package-download-name }}
          package-download-sha256: ${{ needs.build.outputs.package-download-sha256 }}
          provenance-name: ${{ needs.build.outputs.provenance-name }}
          provenance-download-name: ${{ needs.build.outputs.provenance-download-name }}
          provenance-download-sha256: ${{ needs.build.outputs.provenance-download-sha256 }}

  verify:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - name: Download package and attestation
        run: |
          curl -Sso attestations.json $(npm view @n4thanj/application-security-frontend --json | jq -r '.dist.attestations.url')
          curl -Sso package.tgz "$(npm view @n4thanj/application-security-frontend --json | jq -r '.dist.tarball')"
          mv package.tgz frontend-package.tgz
          mv attestations.json frontend-attestations.json

      - name: Verify SLSA Provenance
        run: |
          curl -LO https://github.com/slsa-framework/slsa-verifier/releases/latest/download/slsa-verifier-linux-amd64
          chmod +x slsa-verifier-linux-amd64
          SLSA_VERIFIER_EXPERIMENTAL=1 ./slsa-verifier-linux-amd64 verify-npm-package frontend-package.tgz \
            --attestations-path frontend-attestations.json \
            --builder-id "https://github.com/slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml" \
            --package-name "@n4thanj/application-security-frontend" \
            --package-version 1.0.0 \
            --source-uri github.com/N4thanJ/Application-Security

      - name: Upload verified frontend artifacts
        uses: actions/upload-artifact@v3
        with:
          name: verified-frontend
          path: |
            frontend-package.tgz
            frontend-attestations.json

release:
  needs: [verify]
  runs-on: ubuntu-latest
  steps:
    - uses: actions/download-artifact@v3
      with:
        name: verified-package
        path: .

    - uses: actions/download-artifact@v3
      with:
        name: verified-attestation
        path: .

    - name: Create frontend-slsa folder and move files
      run: |
        mkdir frontend-slsa
        mv package.tgz frontend-slsa/frontend-package.tgz
        mv attestations.json frontend-slsa/frontend-attestations.json

    - name: Zip the folder
      run: zip -r frontend-slsa.zip frontend-slsa

    - name: Upload release to GitHub
      uses: softprops/action-gh-release@v1
      with:
        files: frontend-slsa.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
